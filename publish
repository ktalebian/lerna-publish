#!/bin/bash

## Publish Script for Lerna monorepo projects
## Cleans up the node_modules, re-installs everything, runs test before publishing
## 'Public' can only be published on main branch
## 'Beta' can only be published on v*-beta branch
## 'Alpha' can only be published on non-main and non-v*-beta branches
##
## Example
##    ./bin/publish public        publishes as a public patch bump
##    ./bin/publish               publishes as an alpha tag prepatch bump
##    ./bin/publish beta minor    publishes as an beta tag preminor bump

BIN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
LERNA="$BIN_DIR/lerna"
CURRENT_BRANCH=$(git branch --show-current)

# Release tag
tag="alpha"
if [ "$1" == "public" ] ; then
  tag="public"
fi
if [ "$1" == "beta" ] ; then
  tag="beta"
fi

# Version bump
bump="patch"
if [ "$2" == "minor" ] ; then
  bump="minor"
fi
if [ "$2" == "major" ] ; then
  bump="major"
fi
if [ "$1" != "public" ] ; then
  bump="pre${bump}"
fi

# Verify tag and branch
if [ "$CURRENT_BRANCH" == "main" ] && [ "$1" != "public" ] ; then
  echo "main branch can only have public release"
  exit 1
fi
if [ "$1" == "public" ] && [ "$CURRENT_BRANCH" != "main" ] ; then
  echo "Public release must be done on the main branch"
  exit 1
fi
if [ "$1" == "alpha" ] && [[ "$CURRENT_BRANCH" =~ ^v.-beta$ ]] ; then
  echo "Alpha release cannot be on a v*-beta branch"
  exit 1
fi

# Runs script but quits if script exists with non-zero exit code
function run_script() {
  eval "$@"
  if [ $? -eq 1 ] ; then
    echo "Script '$@' failed - exiting"
    exit $?
  fi
}

# Show notification and a countdown before publihsing
secs=5
while [ $secs -gt 0 ]; do
  echo -ne "Publishing a \033[1m${bump}\033[0m bump as a \033[1m${tag}\033[0m release in ${secs}sec\033[0K\r"
  sleep 1
  : $((secs--))
done
echo -ne "Publishing a \033[1m${bump}\033[0m bump as a \033[1m${tag}\033[0m release\033[0K\r"
echo -ne "\r\n"

# Cleanup
run_script $LERNA clean -y
run_script $LERNA run clean
run_script rm -rf node_modules

# Install
run_script npm install --no-package-lock

# Lint and test
run_script npm run lint
run_script npm run test

# Build
run_script npm run build

# Remove package-lock file
find . -type f -regex "\.\/packages\/[a-zA-z-]*\/package-lock\.json" -delete -o -regex "\.\/package-lock.json" -delete

# Publish package
echo -e "\n------------------------------------"
echo "-- Publishing as ${tag} release --"
echo -e "------------------------------------\n"
if [ "$1" == "public" ] ; then
  run_script $LERNA publish $bump --yes
else
  run_script $LERNA publish $bump --preid ${tag} --dist-tag ${tag} --yes
fi
